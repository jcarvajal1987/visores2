---
const { miniatures, padre} = Astro.props;
---
<div class={"hidden-pdf "+ padre}>
    
<div class="index-pag">
    PÃ¡gina:
        <div class="index-container">
        {miniatures.map( (pagina, i) =>
        <div class={"number-page " + pagina.pagina + (i == 0 ? " active-page":"")}>{pagina.pagina}</div>
        )}
    </div>
</div>

<div class="miniature-index">
    
    {miniatures.map( (pagina, i)=>
        
        <div class={'miniature-container start1 '+ pagina.pagina + (i == 0 ? " active-page-container":"")  }>
            <div class="container-image">
                <img
                class="miniature-news"
                width="320"
                height="180"
                src={pagina.recorte}
                alt=""
                />
                
            </div>
            <div class="container-image">
                
            <img
            class="miniature-news"
            width="320"
            height="180"
            src={pagina.contexto}
            alt=""
            />
            </div>
        </div>
    )}
</div>
</div>

<style>
    
    .index-pag{
        display: flex;
        flex-direction: row;
        gap: 5px;
        align-items: center;
        flex-wrap: wrap;
        margin: 10px 0;
    }
    .index-container{
        flex-wrap: wrap;
        display: flex;
        flex-direction: row;
        gap: 5px;
    }
    .miniature-index{
			display: grid;
			grid-template-columns: 100%;
			height: fit-content;
		}
		.miniature-container{
			display: flex;
			flex-wrap: wrap;
			opacity: 0;
            pointer-events: none;
			gap: 13px;
			width: 100%;
			flex-direction: row;
            transition: 1s;
            height: fit-content;
		}
        .active-page-container{
            opacity: 1;
            pointer-events: all;
        }
        .number-page{
            height: 38px;
            width: 38px;
            display: grid;
            place-content: center;
            background-color: #e6e6e6;
            border-radius: 50%;
            cursor: pointer;
        }
        .active-page{
        color: white;
        background-color: #171717;
    }
        .active-miniature{
            border: 1px solid red;
        }
		.container-image{
			display: flex;
			width: fit-content;
			height:auto;
		}
        .miniature-news {
		filter: contrast(0.9);
		width: auto;
		height: fit-content;
        max-width: 120px;
        max-height: 217px;
        }
        @media print {
            .container-image-carrousel{
                opacity: 1;
            } 
        }
		
</style>

<script is:inline>
    let carrousel = document.querySelector('.carrousel');
    
    let carrouselimage = document.querySelectorAll('.container-image-carrousel');
    let activepage = 0
let activesuplement = 0
    let containers = document.querySelector('.index-sidebar').querySelectorAll(".miniature-container")
   
    let pages = document.querySelectorAll('.number-page')
    pages2 = document.querySelectorAll('.number-page2')
    pages.forEach((item,i) => {
        item.addEventListener('click', event => {
            
            pages[activepage].classList.remove("active-page")
            pages2[activepage].classList.remove("active-page")
            containers[activepage].classList.remove("active-page-container")
            containers2[activepage].classList.remove("active-page-container")
            pages[i].classList.add("active-page")
            pages2[i].classList.add("active-page")
            containers[i].classList.add("active-page-container")
            containers2[i].classList.add("active-page-container")
            activepage = i
            console.log(carrousel)
            
        })
    })

    let miniatures = document.querySelectorAll('.container-image')
    miniatures.forEach((item,i) => {
        item.addEventListener('click', event => {
            
            miniatures2[activesuplement].classList.remove("active-miniature")
            activesuplement = i
            miniatures2[activesuplement].classList.add("active-miniature")
           carrousel.classList.add("active-carrousel")
           carrousel.classList.remove("over-carrousel")
           carrouselimage[i].classList.add("active-container-image-carrousel")
           carrouselimage[i].focus()

            
        })
    })


    // let suplements = document.querySelectorAll('.container-image-carrousel')
    // suplements.forEach((item,i) => {
    //     item.addEventListener('click', event => {
            
    //     })
    // })


    let currentZoom = 1;
let minZoom = 0.5;
let maxZoom = 3;
let stepSize = 0.1;
let startX= 0;
let startY= 0;

let currentMoveX = 0;
let currentMoveY = 0;
let containerscroll = document.querySelectorAll('.container-image-carrousel img');








containerscroll.forEach((item)=>{
    item.addEventListener("mousedown", inicio);

})


function inicio(event){
    let matrix = new WebKitCSSMatrix(event.toElement.style.transform)
   let x = matrix.m41
   let y = matrix.m42
    startX = event.pageX - x;
    startY= event.pageY - y;
    event.toElement.addEventListener("mousemove", moviendo);
}

function moviendo(e){
    e.preventDefault();
    currentMoveX = (e.pageX - startX )
    currentMoveY = (e.pageY- startY)
    e.toElement.style.transform = 'translateX(' + (currentMoveX) + 'px'+ ')' + 'translateY(' + 0 + 'px'+ ')' + 'scale(' + currentZoom + ')';
    // e.toElement.addEventListener("mouseleave", terminar);
    
}

containerscroll.forEach((item)=>{

    item.addEventListener("mouseup", terminar);
    item.addEventListener("mouseover", terminar);
})

function terminar(e){
    let matrix = new WebKitCSSMatrix(e.toElement.style.transform)
   let x = matrix.m41
   let y = matrix.m42
    x = currentMoveX
    y = currentMoveY
    console.log(x)
    e.toElement.removeEventListener("mousemove", moviendo);
    e.toElement.removeEventListener("mouseleave", terminar);
    
}


</script>